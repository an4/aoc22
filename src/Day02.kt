fun main() {
    fun getScore(game: String) : Int {
        if (game == "A X") return 4
        if (game == "A Y") return 8
        if (game == "A Z") return 3
        if (game == "B X") return 1
        if (game == "B Y") return 5
        if (game == "B Z") return 9
        if (game == "C X") return 7
        if (game == "C Y") return 2
        if (game == "C Z") return 6
        println("Error")
        return 0
    }

    fun part1(games: List<String>): Int {
        return games.sumOf { getScore(it) }
    }

    // A - rock
    // B - paper
    // C - scissors
    // X - lose
    // Y - draw
    // Z - win

    fun getScore2(game: String) : Int {
        if (game == "A X") return 0 + 3 // rock scissors lose
        if (game == "A Y") return 3 + 1 // rock rock draw
        if (game == "A Z") return 6 + 2 // rock paper win
        if (game == "B X") return 0 + 1 // paper rock lose
        if (game == "B Y") return 3 + 2 // paper paper draw
        if (game == "B Z") return 6 + 3 // paper scissors win
        if (game == "C X") return 0 + 2 // scissors paper lose
        if (game == "C Y") return 3 + 3 // scissors scissors draw
        if (game == "C Z") return 6 + 1 // scissors rock win
        println("Error")
        return 0
    }

    fun part2(games: List<String>): Int {
        return games.sumOf { getScore2(it) }
    }

    val rawInput = "C Y,A Z,B Y,A Z,A X,A Z,B Y,A Z,B Y,C Z,B Y,C Z,A Z,C Y,B Y,B Y,B Y,C Y,B Y,B Y,A X,B Y,A Y,B Y,B Y,B X,A Y,C Z,C X,A Z,B Y,A X,C Y,C X,C Z,C X,B Y,B Y,B X,A Z,A X,C Y,A Z,C Z,B X,C X,B Y,C X,C Z,C Y,C Z,A Y,A Z,C Z,A Z,A Z,A Z,A Z,B Y,A Z,B Y,B Y,B Y,B X,A Z,B X,C Z,C Z,A Z,A Z,B Y,C Y,A X,C Y,C Y,B Z,B Y,C X,A X,A Z,C Z,C X,B Y,A X,C X,B Y,C X,B Y,C X,B Y,C Y,A Z,C Z,B X,C Y,B Y,A Z,B X,C Z,C Z,B Y,C Z,C X,A X,A Z,A Z,A Y,C Z,C Y,A X,C Z,C Y,A Z,C X,B X,A Z,B Y,A Z,B X,C X,A Z,C Y,C Z,B Y,C Y,C X,A Z,C X,C X,B Y,B Z,A X,B X,C Y,A Z,B Y,C Z,B Y,C Z,B X,B Y,B X,B Y,B Y,B Y,C Y,A Z,A Y,A Z,C Z,B Y,C Z,B Y,C Y,A Z,B X,B Y,C Z,A X,A Y,C X,B X,A Z,C X,A Y,A X,A Z,A Z,A Z,B Y,B Y,B Z,B Y,C Y,B Y,A Z,C X,A Z,A X,B Y,A X,C X,C X,A X,B X,C X,C Z,B Y,B Y,C Y,B X,C X,A Z,B Y,B Y,C Z,A Z,B Y,B X,C Z,A Y,B Y,A Y,C Y,C X,A X,B Y,C X,B Z,B Y,B Y,A Z,C Y,B Y,B Y,A Y,B Z,B Z,A Y,B Y,C Y,A Z,B Y,C Z,A Z,B Y,A Z,C Y,A X,B Z,C X,C Y,B Y,C Y,A Z,A Z,B Y,B Y,C Y,A Y,A Y,C Y,A Z,C Y,B X,C X,A X,A Y,A Z,A Y,A Z,B Y,B Y,B Y,A Z,C Y,C Z,A Y,C Y,A Z,A Z,C Z,B Y,A Z,C Z,B Y,C Y,C Z,C X,B Y,A Z,B Y,B Y,A Z,C X,B Y,A Z,B Y,C Y,A Y,A Z,C X,A Z,A Y,C Y,A Z,C Y,C Y,B X,A Z,B Y,A Z,C Y,B Y,B Y,B Y,A Z,C Z,C Y,B Y,C Z,C Y,C Y,C Y,A X,B X,C X,B Y,B Y,B X,B Y,B Y,C Z,B Y,B Z,C X,B Y,C Y,C Y,B X,A Z,B Y,B Y,A Z,B Y,C Z,B Y,B Y,A Z,C Z,C Z,A Z,C Y,B Y,B Y,C Y,B Z,A Y,C X,A Z,B X,C Y,A Z,C Z,B Y,B X,B Y,B Y,B Y,C Z,A Z,B Y,B X,B Y,B X,B X,C Z,A Z,B Y,C Z,A Z,C Y,C Y,A Z,A Z,A Y,B Y,C X,A Z,B Y,A Z,A Z,A Z,A Y,A Z,A Z,A Y,A X,A Z,C Z,C Y,C Y,C X,A Z,A Y,B Y,A Z,A Z,B Y,B X,B Y,A Z,A X,B Y,C Y,C Y,A Z,C Y,C X,B Y,A X,A X,C Y,A X,C Z,C X,C Y,B Y,A Z,C Y,A Z,A Z,C Z,B Y,A Z,A Y,A X,C X,C X,B Y,C X,B Y,C Z,A Y,B Y,C Y,C X,B Y,C Y,A Z,B Y,A X,C Y,A Y,A Z,A Z,B Y,A Z,A Z,C X,B Y,B Y,A Z,B Y,C Y,C Z,A Z,C Z,C Z,B Y,A Z,B Y,A Z,B Z,C Z,A Y,B Y,B Y,B Y,C Y,A X,A X,B X,B Y,C Z,C Y,C Y,C Y,A X,B Y,B Y,C Z,C X,B Y,A X,A Z,C Y,C Y,A Z,A Z,C Z,A Z,C Y,B Y,A X,B Y,C Z,A Z,A Y,B Y,B Z,C Y,C Y,C X,B Y,C Y,C Y,C Y,C Z,B Y,A Y,A Y,A Z,B Y,C X,B X,B X,B X,A Z,B Y,C Z,C Z,C X,B Y,B Y,B Y,A X,A Z,A Z,B Y,C Y,B Y,C Y,B X,A Z,B Y,B Y,B Y,B Y,B Y,B Y,C X,A Y,B Y,B Y,C Y,A Z,B Y,C X,B X,C Z,C X,A X,C X,B Y,B Y,C X,B Y,C Y,A Z,B Y,A X,C Y,A X,C Y,C Y,B Y,A Y,A Z,B Y,C Z,C Z,B Y,C Z,A Z,A Y,A Z,C Y,C Z,B Y,C Z,A Z,C X,A Y,C Z,A Z,B Y,C Z,C Y,B Y,A Z,B X,A Z,B X,C Z,B Y,A X,C Y,A Z,C Y,B Y,B Y,B Y,C Y,B Y,B Y,C X,A Z,A Z,B Y,C Y,C Z,C X,A Z,C Y,B X,B Y,A X,B Y,A Z,A Z,B Y,B X,C Z,C X,B Z,A Y,B Y,B Z,C Y,A Z,B X,C Y,B Y,C Z,B Z,A Y,A X,C X,B Y,C Y,A X,A Z,B Y,A Y,B Z,C X,B Y,C Y,C X,A Z,A Y,A Z,B Y,C Z,B X,A X,B Y,B Z,A Z,C Y,C X,A Z,C Y,C Z,B X,A Z,B X,A Z,A Z,C Y,B Z,C Y,C Y,B Y,C X,B X,A X,A Z,C Z,B X,B X,B X,B Z,B Y,B Z,C Y,B Y,C Y,C Z,A Z,A X,B Y,B Y,B Y,B Y,C X,B Y,B Y,A X,C X,B Y,C Z,C Y,A Z,A Y,B Y,C Y,B Y,C X,C X,B Y,B Y,B Y,C Y,A Z,A Y,C X,A Z,A Z,B Y,C X,C Y,B Y,B Y,C Y,C X,B X,C Y,B X,A Z,B Y,C X,B X,C Y,C Y,A Z,B Y,A Z,C Y,A Z,A Z,C Z,C X,C Y,A Z,C Z,A Z,B Y,A X,B Y,B Y,A Z,C X,B Z,B Y,C X,A Y,B Y,A Z,C Z,A Z,A Z,A Z,B Y,B Y,B X,B Y,B Y,B Y,C Z,B Y,A Z,C X,C Z,A Z,C Z,C Y,B Y,C Y,B X,C Y,B Y,A Z,B Y,C X,B Y,A Z,C Y,B Y,C Y,C Z,A X,B X,C X,B X,A X,B Y,A X,C Z,B Y,C Z,B Y,B Y,C Z,B Y,A Y,C Z,B Z,A Z,C X,A Z,A Z,B Y,B Y,C Y,C Z,C X,A Y,B Y,B Y,A X,A Y,B X,C Z,C Z,B Y,C Y,B Y,C X,B Z,A Z,A Z,B Y,A Y,A Y,A X,A Z,B Y,A X,B Z,C Z,B X,C Z,B X,B Y,A Y,B X,A Z,A Z,C Z,A X,C Z,B Y,A Y,C Z,C X,B Y,B Y,A X,C Y,C X,C Y,C X,A X,B Y,B X,B Y,C Y,C Y,C X,A Y,A Z,C Y,C Y,B Y,B X,B Y,B X,A Z,A Z,C Z,B Y,B Y,B Y,B X,C Z,A Y,A Z,B Y,B Y,B Y,B X,A X,B Y,C Z,A Z,A Z,C Y,C Y,B Y,B Y,A Z,B Y,A X,A Z,C Z,A Z,B Y,C X,B Y,A X,B Y,B X,B Y,B X,C X,A Z,C Z,C Z,B X,A Z,B Y,A Z,B X,B Y,A Z,C Y,B Y,A Z,A X,B Y,A Z,B Y,B Y,C Y,A Z,B Y,B Y,C Y,A Z,C Z,A Z,C Z,B Y,A Z,B Y,A Z,C Y,B Y,A X,A Z,B Y,B Y,C Z,C Z,C Z,B Y,C Y,A X,C X,A X,C Y,A Y,B X,B Y,C Z,B Y,B Y,B X,C Z,B Y,C X,A Z,C X,B Y,A X,C X,C Y,A Z,A X,C Z,C Z,B Y,C Y,A Y,A Z,A Y,C X,C X,B Y,C Y,B Y,A Z,C X,B Y,C Y,A X,A Z,C Y,B Y,B Y,A Y,C X,B Y,C Y,B Y,B X,A Z,C Y,C Y,A X,C X,A Z,C X,B Y,A X,C Z,B Y,C X,B Y,A Z,A Y,B Y,B X,B Y,C Y,C Z,B Y,A Z,A X,B X,C X,C Z,B Y,B Y,C X,C Z,A Z,C Y,C Z,B Y,A Z,B Y,B Y,C Z,C Z,B Y,C Y,B Y,A Z,B X,B Y,B Y,C X,A Z,A Z,B Y,C Y,B Y,A Z,A Y,A X,C Z,C Y,C Z,C Z,C Z,A Z,B Y,C Z,A Z,C Y,A Z,B Y,B Y,B Y,A Z,B Y,B X,B Y,B Y,B Y,B Y,B Y,B Y,A X,C Z,B X,B Y,C X,A Z,B Y,B X,C Y,B Y,C Y,B Y,A Z,B Y,C Y,A X,B Y,C X,B X,B Y,C Z,B X,C X,C Y,C X,C Y,C X,A Z,C X,B Y,A Z,B X,A Z,B X,B X,A Z,C Z,A Z,B X,B Z,C X,C Y,A X,A Z,B X,C Y,A Z,C Z,B Y,B Y,C Y,B Z,B Y,B Y,C Y,C Z,B Y,A Z,A X,B X,B X,C X,A Z,C Y,B Y,B Y,A Z,B Y,A Z,A Z,B Y,B Y,B Y,B Y,C X,B Y,B X,C Z,B X,C X,B X,B Y,B Y,B Y,A Z,B Y,A X,A Y,C X,B X,B Y,B Y,C Z,A Y,C Z,C Y,A Z,C Z,C Z,B X,B Y,A Z,B Y,C X,C Y,C Y,B X,B Y,B Z,A Y,A Z,C X,A X,B X,C X,B Y,B Y,B Y,B X,C X,B Y,A Z,A Z,A Y,B X,C Y,C Z,A Z,A Z,B X,A Z,C Y,B Y,A X,B X,A Z,B Y,B Y,B Y,B Y,C Z,C Z,A Y,B Y,C Z,C Z,B Y,B X,A Z,C Y,C X,A Z,A Z,C Y,C X,C Y,A Y,B Y,C X,B Y,B X,C Z,C X,C Y,B Y,B Y,A Z,B Y,C Z,C Y,B X,B Y,A Z,A Z,B X,B Y,A X,A Z,B Y,B Y,B Y,B Y,B Y,C Y,B Y,B Y,C Y,B Y,B Y,C Z,B Y,A X,C Y,B Y,A Z,B Y,C Z,C Z,C Y,A Y,B Y,A Z,A X,C Y,C Z,C Y,C Z,C Z,C Y,B X,B Y,B Y,C Z,C X,A Y,C Y,B Y,B Y,A Y,A Y,C X,C Y,A Z,A Z,A X,B Z,B X,A X,A Y,A Z,B Y,C Y,B X,B Y,B Y,C Z,C X,B Y,B Y,B Y,B Y,C Y,B Y,B X,C X,C Y,B Y,A Z,A Y,A Z,C Z,C Y,A Z,A Z,B Y,B Y,C Y,A X,B Y,A Z,B Y,A Z,B Y,B X,C X,C Y,A Z,A Y,B Y,C X,A Z,B Y,A Z,C Y,B X,B Y,B X,C Z,C X,B Y,A Z,B Y,B X,A X,C Z,C X,A Z,A Y,A X,A Z,A Z,A Z,C Y,A Z,B Y,A Z,A Z,C Z,B X,B Y,B Y,B Y,B Y,A Z,B Y,C Y,A Z,A Y,B Y,B Y,C Y,C Y,A Z,C Z,A Z,B Y,B Y,A Z,A X,A Z,A Z,C Y,C Z,A Z,C X,A X,B Y,C Y,C X,C Z,B Y,C Y,A Z,A Z,C Z,A Z,A Z,A X,B Y,C Y,A Z,C X,C Y,B Y,C X,B X,B Y,C Y,A Z,A Z,A X,B Y,A Z,B Y,B Y,C Z,C Z,A X,A Y,B Y,C Z,B Y,B Y,C X,A Z,C Z,A X,B Y,A Y,B Y,C Z,B Y,C X,B Y,B X,B Y,B Y,C Y,B X,B Y,A Z,A Z,B Z,A Z,B Y,B Y,A Y,A Z,C Z,C Y,B X,B Y,C Y,B X,C X,B Y,C X,A Z,B Y,B Y,B Y,C Y,B Y,B Z,A Z,B Y,A Z,C Y,B Y,B Y,B Y,B Y,C Z,B Y,B Y,B Y,A Z,C Z,B Y,B X,A Z,C X,C Y,C Z,B Y,A Z,C Y,A Y,A X,C Y,A X,A Z,A Z,B X,B Y,B Y,C Y,B X,B Y,A Z,B X,B Y,C Y,B Y,C X,A Z,A Z,A Z,A Z,C Z,A Y,C Z,C Z,C Z,B X,B Y,B X,A Z,A Y,B Y,A X,C X,C X,B Y,B Y,B Y,A X,A X,B Y,C Z,B Y,A Z,C Y,B Y,B Y,A Z,C Y,C Z,A Y,A Z,B Y,C X,C X,A Z,B Y,C Y,A Z,A Z,C Z,C X,B Y,C Z,C Z,B Y,A Z,A Z,B X,C X,B Y,C Y,B Y,C Y,B Y,B Y,A Z,A Y,B X,C Y,B Y,C X,C X,C Y,A Z,B Y,C Y,B Y,C Y,B Y,A Y,B Y,A Z,C X,C Z,C Z,C Y,B Y,C Y,B X,B X,A X,B Y,A X,B Y,A Z,C X,B Y,A Z,B X,B Z,B Y,B Y,C Y,B Y,A Z,B Y,C Y,C Z,A Z,C Z,B Y,B Y,B Z,A Z,B Y,C Z,B X,A Z,A X,B X,B Y,A X,B Y,C Y,A Z,A Y,B Y,A Z,B Y,A Y,B Y,C Z,C Z,C Y,C Z,B Y,A Z,B X,B Y,C Y,B Y,C Y,C Y,A Z,A Z,C X,A Y,C Z,B Y,B Y,B Y,C Y,B X,C Y,B Y,A Z,A Y,B Y,B Y,B Y,C X,B Y,C Z,A Y,B X,A Z,A Z,C X,B Y,B Y,A Z,A Y,A Y,C Z,A Z,A Y,B Y,C X,A X,A Y,B Y,A X,B Y,B X,C Y,C Z,C X,B Y,C Y,A Z,B X,A Z,B Y,B Y,B Y,C Y,B Z,C Z,C Y,B Y,C Y,B X,A X,B Y,B Y,A X,C Y,C Y,C Z,B X,A Z,C X,A Z,A Z,C Z,C Y,B Y,C Y,C X,A Z,C Z,B Y,A Z,A Z,C Z,A X,B Y,B Y,C Y,A Z,B X,B X,B X,B Y,B Y,B Y,B Y,A X,B Y,B Y,B X,C X,A Z,A Z,A Z,A Z,B Y,A Z,A Z,B X,A Z,C Y,B Y,B Y,B Y,B X,C Z,A Z,B Y,C X,A X,C Z,B Y,C Y,C Z,A Y,C Z,C X,C Y,B Z,B Y,B Y,B Y,A Z,C Z,A Z,A Z,C Z,B X,C Z,C Y,B X,B Y,C Y,B Y,B X,A Y,B Y,A Z,A Z,B Y,B Y,B X,B X,B X,B Y,A Y,C X,C Y,B Y,C X,B X,A Z,B Y,C X,B Y,B Y,B Y,B Y,A Z,B Y,C Z,B Y,C Z,A X,A Z,C Y,B Y,C Z,B Y,A Y,C X,C X,C Y,A Z,B Y,C X,B Y,B Y,A X,C X,A Z,C X,A Z,B Y,C Y,B Y,B Y,C Y,A Z,A X,C X,B X,B Y,B Y,A Y,B Y,B Y,C X,A Z,B Y,A Y,B Y,B Y,B Y,C Y,B Y,C X,B X,B X,C X,A Z,C X,C X,C Z,B Y,B Y,B Y,B Y,C Z,B X,B Y,B Y,A Z,A X,A Y,A Z,C Y,B Y,B Y,C X,B Y,B Y,B X,A Y,C Y,B Y,B Y,B Y,A Z,A Z,B X,C Y,B Y,A X,B Y,B Y,B X,B Y,A Y,C X,B Y,C Y,C Z,A Z,A Z,C Z,C Y,A Z,B Y,B X,B Y,B Y,C Z,B Y,A Z,C X,B Y,A Z,B Y,B Y,B Y,C X,A Z,A X,C Z,B Y,A Z,C Y,A Y,B Y,A Y,B Y,C Y,C Z,B Y,A Z,A Z,B Y,A X,C X,C Z,C X,B X,C Z,B Z,B Y,B X,C Z,B Y,C Y,C Y,A Z,B Y,B Y,B Y,B Y,C Y,A Z,B Y,A Z,C Z,A X,A Z,B Z,A Z,C Y,B Y,C Z,B Y,C Z,A Z,C Z,B Y,B Y,B Y,A Z,B Y,B X,B X,B X,A Z,C Z,C Y,B X,C Z,A X,B Y,C Y,B Y,B X,B Y,A Z,A X,A X,B Y,C Y,C Y,B Y,B Y,A Z,C Y,A X,A Z,C Y,A Z,C Z,C Y,A Z,C Y,C X,A Z,B X,B Y,A X,C Z,C Z,B X,C X,B Y,A Z,C Z,C Y,C Z,C X,C Z,A X,C Z,B X,C Y,C Z,B Y,C X,A Z,A Y,B Y,A Z,B Y,B Y,B X,C Z,B Y,B Y,B X,B Y,C Y,C Z,B X,B Y,C Z,B Y,B Y,B Y,B Y,A Z,C Z,C Y,B X,B X,B Y,B X,C Y,C Y,A Z,A Z,B X,B Y,B Y,C Z,C Z,B Y,A Z,C X,C Y,C X,B Y,B Y,C Z,C X,B Y,C Y,C Z,C Y,C X,C Y,B X,B X,B Y,B Y,B Y,C Z,B X,B Y,C X,C Y,C Y,C X,A Z,B Y,C Y,C Z,B Y,C Y,B Y,A Y,A Z,C Z,C Z,C Y,A X,C X,C Z,C Y,C Z,B X,C Z,B Y,C X,C Y,C Y,A Z,B Y,A Z,B Y,A X,C Z,A Z,C Z,B Y,B Y,B Y,A Z,A X,B Y,B Z,B Y,B Y,A Z,B Y,B Y,C Z,B Z,A Z,C X,B Y,A Y,B Y,C Y,C Y,C X,B Y,B Z,C Y,B Y,A Y,C X,A Z,A Z,B X,C Y,B Y,B Z,A Z,A Z,B Y,A Z,A Z,A Z,C Y,A Z,A Y,A Z,C Z,C Y,B Y,A Z,B X,B Y,A Z,A Y,B X,B Y,C Y,C Z,C Y,B X,C Y,B Y,B Y,A Z,A Z,B Y,C X,A X,A Z,A X,A X,C Y,B Y,C Z,A Z,B Z,B Y,B Y,B Y,C X,B Y,C Z,B Y,B Y,C Z,C Z,A Z,A Z,A Z,A Z,C Y,A Z,A Z,B Y,B Y,A Z,A Z,C X,C Y,A Z,B Z,B Y,C X,C X,B Y,C X,B Y,C Y,C X,B Y,C Z,A X,B Y,B X,B Y,C Y,B Y,A X,C X,B Y,B Y,B X,B Y,A Z,A Z,A Z,A Z,B Z,B Y,B Y,C X,A Z,C Y,B Z,A X,B Y,B X,B Y,A X,C X,B Y,B Y,A Z,B Y,C Z,A Y,B X,C X,B Y,B Y,A Z,C X,C Y,B Y,C Y,C Z,A Y,A Z,B Y,B Y,A Z,C Y,B Y,C Y,C X,C X,C Y,C Z,A Z,C X,B Y,A Z,B Y,C X,B Y,B Y,A Z,A Z,C X,B Y,A Z,B Y,A Y,B X,B Y,B X,A Y,B Y,B X,B Y,A Z,B Y,C Z,B Y,B Y,B Y,A Y,B Y,C Z,B X,B Y,A X,A Z,B Y,A Z,B X,C Y,B Y,B Z,C Y,B Y,C Y,C X,C X,C Z,B Y,B Y,B Y,A Z,B X,A Z,C Z,B Y,A Y,B Y,C Y,A Z,B Y,A Y,B X,B Y,C Y,C Y,A Z,A Z,B Y,C Y,C Z,A Z,A X,B Y,B Y,B Y,B Y,A Z,C Y,A Z,B Y,B Y,C Z,A Z,A X,C Y,B Y,B Y,A Z,B X,C Z,C Y,C Z,C Y,B Y,A Z,A Z,B Y,A Z,A Z,B Z,C X,C X,B Y,C Z,A Z,B X,A X,A Y,C Y,C Y,A Z,C Y,B Y,A Z,A Z,C Y,B Y,A Y,B X,C Z,B Y,B Y,A Z,B Z,C Z,B Y,B Y,B Y,A Y,C Y,A Z,A X,B Y,B Y,B Y,C Z,A X,B Y,B Y,C Y,B X,B Y,A Z,B Y,A Z,A Y,C Y,B Y,B Y,A Z,B X,A Z,A Z,A Z,B Y,A Y,C Z,B Y,B X,B Y,B Y,B Y,B Y,B Y,A X,C Z,B Y,B Y,B Y,C Z,B X,A Y,B X,C Z,B Y,C X,C X,A Z,B Y,B Y,A Z,C X,C X,A Z,B X,B Y,C X,C Z,A X,B X,B Y"
    val input = rawInput.split(",")
    println(part1(input))
    println(part2(input))
}